name: Node.js CI/CD - Build & Push Docker Image

on:
  push:
    branches:
      - main  # ou master selon ta branche

env:
  IMAGE_NAME: redis-node
  DOCKERFILE_PATH: Dev/redis-node/Dockerfile
  CONTEXT_PATH: Dev/redis-node

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Récupération du code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2️⃣ Installer Node.js (pour les tests)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ env.CONTEXT_PATH }}/package-lock.json

      # 3️⃣ Exécuter les tests unitaires
      - name: Run Unit Tests
        run: npm test
        working-directory: ${{ env.CONTEXT_PATH }}

      # 4️⃣ Connexion au registre Docker (GitHub Container Registry)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5️⃣ Extraction des métadonnées
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest

      # 6️⃣ Build et Push de l'image Docker
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
